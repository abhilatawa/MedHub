package org.asdc.medhub.Controller;import jakarta.validation.Valid;import org.asdc.medhub.Service.BlogsService;import org.asdc.medhub.Service.Interface.IBlogsService;import org.asdc.medhub.Utility.Constant.ProjectConstants;import org.asdc.medhub.Utility.Model.RequestModels.BlogsModel;import org.asdc.medhub.Utility.Model.ResponseModel;import org.asdc.medhub.Utility.Model.ResponseModels.BlogsDetail;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.security.access.annotation.Secured;import org.springframework.web.bind.annotation.*;import java.util.List;/** * Controller class responsible for handling requests related to blogs. */@Secured({"DOCTOR","PATIENT"})@RestController@RequestMapping(ProjectConstants.Routes.Blog.mainRoute)public class BlogsController {    /**     * Blogs service  instance     */    private final IBlogsService blogService;    /**     * Constructor for BlogsController.     * @param blogService The service responsible for handling blog-related operations.     */    @Autowired    public BlogsController(IBlogsService blogService) {        this.blogService = blogService;    }    /**     * Endpoint for creating a new blog post.     * @param blogsModel The model containing details of the blog to be created.     * @return ResponseEntity containing the response model.     */    @PostMapping(ProjectConstants.Routes.Blog.createBlog)    public ResponseEntity<ResponseModel<String>> createBlog(@Valid @RequestBody BlogsModel blogsModel) {        ResponseModel<String> response = this.blogService.createBlogPost(blogsModel);        return ResponseEntity.ok(response);    }    /**     * Endpoint for retrieving all blog posts.     * @return ResponseEntity containing the response model with a list of blog details.     */    @GetMapping(ProjectConstants.Routes.Blog.getBlogsList)    public ResponseEntity<ResponseModel<List<BlogsDetail>>> getAllBlogsPosts() {        ResponseModel<List<BlogsDetail>> response = this.blogService.getAllBlogsPostsForDoctors();        return ResponseEntity.ok(response);    }    /**     * Endpoint for retrieving blog posts for patients.     * @param doctorId The ID of the doctor whose blogs are to be retrieved.     * @return ResponseEntity containing the response model with a list of blog details.     */    @GetMapping(ProjectConstants.Routes.Blog.getBlogsListforPatients)    public ResponseEntity<ResponseModel<List<BlogsDetail>>> getAllBlogsPostForPatients(@RequestParam ("doctorId") int doctorId) {        ResponseModel<List<BlogsDetail>> response = this.blogService.getAllBlogsPostsForPatients(doctorId);        return ResponseEntity.ok(response);    }}